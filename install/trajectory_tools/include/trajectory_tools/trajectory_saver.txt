#ifndef TRAJECTORY_SAVER_HPP
#define TRAJECTORY_SAVER_HPP

#include <ros/ros.h>
#include <geometry_msgs/PoseStamped.h>
#include <visualization_msgs/MarkerArray.h>
#include <trajectory_tools/SaveTrajectory.srv>
#include <deque>
#include <fstream>

class TrajectorySaver {
public:
    TrajectorySaver(ros::NodeHandle& nh);

private:
    ros::Subscriber pose_sub_;
    ros::Publisher marker_pub_;
    ros::ServiceServer save_srv_;
    std::deque<std::pair<ros::Time, geometry_msgs::PoseStamped>> trajectory_buffer_;
    double marker_lifetime_sec_;

    void poseCallback(const geometry_msgs::PoseStamped::ConstPtr& msg);
    bool saveTrajectoryCallback(trajectory_tools::SaveTrajectory::Request &req, trajectory_tools::SaveTrajectory::Response &res);
    void saveTrajectoryToFile(const std::string& filename, double duration);
    void publishTrajectoryMarkers();
};

#endif

